" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif
"highlight! link DiffText MatchParen

"
" CUSTOM PART
"

" basic appearance 
set number relativenumber
set autoindent 
set tabstop=2
set hlsearch
set incsearch
set showmatch
set cursorline
set shiftwidth=2
if &diff
    colorscheme evening
endif

"
" color scheme
"
colorscheme gruvbox
let g:gruvbox_contrast_dark='hard'
set background=dark

" Speed Up vim when Syntax is on
set ttyfast
set lazyredraw

" use System clipboard
set clipboard=unnamedplus

" enable usual backspace mode
set backspace=indent,eol,start
autocmd BufNewFile,BufRead *.template set syntax=html
set expandtab
set tabstop=2

" spelling 
set spelllang=en_us,de
autocmd FileType markdown setlocal spell 

"
" Custom Mappings
"
" Use tab so select completor completion
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>\<cr>" : "\<cr>"

"cn / cp to cycle buffers
nnoremap <C-N> :bn<CR>
nnoremap <C-P> :bp<CR>

"
" User files 
"
if filereadable(expand("~/.vimtags"))
  source ~/.vimtags
endif

"
" (Plugin) specific settings
"

"
" netrw
"
" folder view setup
let g:netrw_liststyle = 3
let g:netrw_banner = 0
"let g:netrw_browse_split = 2
let g:netrw_winsize = 25

"
"wildmenu
"
set wildmenu
set wildmode=longest:full,full

"
" completor
"
" enable clang
let g:completor_clang_binary = '/usr/bin/clang'

"
" airline
"
let g:airline#extensions#tabline#enabled = 1

"
" ctrlp
"
let g:ctrlp_map = '<c-t>'
let g:ctrlp_cmd = 'CtrlP'
nnoremap <c-l> :CtrlPTag<CR>
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

"
" nerdtree and nerdtree git integration 
"
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeIndicatorMapCustom = {
  \ "Modified"  : "*",
  \ "Staged"    : "+",
  \ "Untracked" : "-",
  \ "Renamed"   : "->",
  \ "Unmerged"  : "=",
  \ "Deleted"   : "X",
  \ "Dirty"     : "D",
  \ "Clean"     : "v",
  \ 'Ignored'   : 'i',
  \ "Unknown"   : "?"
  \ }

